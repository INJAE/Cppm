cmake_minimum_required(VERSION 3.10)

project(cppm LANGUAGES CXX VERSION 0.0.1)

message(STATUS "We are on a ${CMAKE_SYSTEM_NAME} system")
if(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    add_definitions(-DSYSTEM_LINUX)
endif()
if(${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
    add_definitions(-DSYSTEM_DARWIN)
endif()
if(${CMAKE_SYSTEM_NAME} STREQUAL "AIX")
    add_definitions(-DSYSTEM_AIX)
endif()if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
    add_definitions(-DSYSTEM_WINDOWS)
endif()

# detect host processor
message(STATUS "The host processor is ${CMAKE_HOST_SYSTEM_PROCESSOR}")
set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})
set(MODULE_PATH ${CMAKE_MODULE_PATH}/Modules)

if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17 -Wall -pthread -fPIC -O0") 
elseif("${{CMAKE_CXX_COMPILER_ID}}" STREQUAL "GNU")  
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17 -Wall -pthread -fPIC -O0") 
endif()

find_package(nlpo   REQUIRED)
find_package(fmt   REQUIRED)
find_package(cpptoml   REQUIRED)
find_package(Boost  COMPONENTS system filesystem REQUIRED)


(set cppm_source 
	include/option/make.h
	include/option/build.h
	include/option/cppm.h
	include/option/base_option.h
	include/util/filesystem.h
	include/util/algorithm.hpp
	include/config/dependency.h
	include/config/config.h
	include/config/base_config.h
	include/config/package.h
	include/config/cmake.h
	include/config/path.h
	include/config/lib.h
	include/config/bin.h
	include/config/compiler.h
	include/config/builder.h
	src/option/make.cpp
	src/option/build.cpp
	src/option/cppm.cpp
	src/util/algorithm.cpp
	src/util/filesystem.cpp
	src/main.cpp
	src/config/config.cpp
	src/config/builder.cpp
	src/config/lib.cpp
	src/config/package.cpp
	src/config/path.cpp
	src/config/bin.cpp
	src/config/.#config.cpp
	src/config/dependency.cpp
	src/config/cmake.cpp
	src/config/compiler.cpp
)
