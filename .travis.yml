language: cpp
sudo: required
matrix:
  include:
    ## Clang 6.0
    #- env: COMPILER=clang++-6.0
    #  addons: &defaults { apt: { packages: ["clang-6.0", "valgrind"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-xenial-6.0"] } }

    # Clang 8.0
    - os: linux
      dist: xenial
      compiler: clang
      env:
        - MATRIX_EVAL="CXX=clang++-8"
        - SUDO="sudo env \"PATH=$PATH\""
      addons:  { apt: { packages: ["clang-8", "libc++-dev", "libc++abi-8-dev", "libstdc++-8-dev", "build-essential", "ccache"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-xenial-8"] } }
      cache: {apt: true, ccache: true, directories: ["$HOME/.hunter"]}
    ## GCC 6
    #- env: COMPILER=g++-6
    #  addons: { apt: { packages: ["g++-6", "valgrind"], sources: ["ubuntu-toolchain-r-test"] } }

    # GCC 7
    - os: linux
      dist: xenial
      compiler: gcc
      env:
        - MATRIX_EVAL="CXX=g++-8"
        - SUDO="sudo env \"PATH=$PATH\""
      addons: { apt: { packages: ["g++-8", "libc++-dev", "libc++abi-dev", "build-essential", "libstdc++-8-dev", "ccache"], sources: ["ubuntu-toolchain-r-test"] } }
      cache: {apt: true, ccache: true, directories: ["$HOME/.hunter"]}

    #- os: osx
    #  env: SUDO=""
    #  #addons: { homebrew: { packages: ["cmake", "ccache"]}}
    #  osx_image: xcode10
    #  cache: { directories: "$HOME/Library/Caches/Homebrew"}


before_install:
  - eval "${MATRIX_EVAL}"
#  - if ["TRAVIS_OS_NAME"=="osx"]; then brew update; fi
#  - if ["TRAVIS_OS_NAME"=="osx"]; then brew install cmake; fi
#  - if ["TRAVIS_OS_NAME"=="osx"]; then brew install ccache; fi

script:
  - eval "${SUDO}" cmake -H. -Bbuild
  - cd build && eval "${SUDO}" cmake --build .;
  - ./cppm build install

import:
  - docs/.travis.yml

